{% extends 'base.html.twig' %}
{% block body %}<br/>
    <form>
        <div class="form-row">
            <div class="col-md-12 mb-3">
                <label for="validationDefaultUsername">Address</label>
                <div class="input-group">
                <textarea class="form-control rounded-20" cols="60" rows="16" id="linksData" name="reviews"
                          maxlength=250
                          required></textarea>
                </div>
            </div>
        </div>
        <button class="btn btn-primary" id="getAll">Get all status</button>
    </form>
    <br/>

    <div id="alerts">
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        const button = document.getElementById('getAll');
        const responseContainer = document.getElementById('alerts');
        const responseDiv = document.createElement("div");

        addOnClick(button);

        function addOnClick(button) {
            button.addEventListener('click', function (event) {
                const linksData = document.getElementById('linksData');
                const arrayLinksData = linksData.value.split(/\n/);

                if (!linksData.value) {
                    throw 'No url address'
                }

                button.disabled = true;
                const linksSize = arrayLinksData.length;

                for (let i = 0; i < linksSize; i++) {
                    const path = '{{ path('simple_linker', {'link': ''}) }}' + arrayLinksData[i];
                    if (path) {
                        sendRequest(path, arrayLinksData[i]);
                    }

                }
            })
        }

        function sendRequest(path, address) {
            fetch(path, {'credentials': 'include'}).then(function (response) {
                addAlert(' << Send request to :' + address, null, path);
                response.json().then(function (json) {
                    addAlert(' >> Response :' + json, response.status, path);
                    button.disabled = false;
                })
            }).catch(function (error) {
            })
        }

        function addAlert(message, status = null, path) {
            if (status === null) {
                responseContainer.insertAdjacentHTML('afterbegin',
                    '<div class="alert alert-secondary" role="alert">' +
                    '<button class="btn btn-warning" id="' + path + '" onClick="addOnRefresh(this.id)">Refresh</button>' +
                    '<button type="button" class="close" data-dismiss="alert">' +
                    '&times;</button>' + message + '</div>');
            } else if (status < 400) {
                responseContainer.insertAdjacentHTML('afterbegin',
                    '<div class="alert alert-success" role="alert">' +
                    '<button type="button" class="close" data-dismiss="alert">' +
                    '&times;</button>' + message + '</div>');
            } else {
                responseContainer.insertAdjacentHTML('afterbegin',
                    '<div class="alert alert-danger" role="alert">' +
                    '<button type="button" class="close" data-dismiss="alert">' +
                    '&times;</button>' + message + '</div>');
            }

        }

        function addOnRefresh(path) {
            sendRequest(path, path.split('=')[1]);
        }
    </script>
{% endblock %}
